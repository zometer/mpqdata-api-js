type Query { 
  hello: Hello
  allianceByName(name: String!): Alliance
  allianceByGuid(guid: String!): Alliance
  searchAlliances(name: String!, includeFull: Boolean!, includePrivate: Boolean!): [Alliance]
  playerByName(name: String!): Player
  rosteredCharacter(name: String!, instanceId:Int!): Character!
}

type Hello { 
  name: String!
  version: String!
  now: String! # TODO: Date
}

type Alliance { 
  allianceName: String!
  allianceGuid: String!
  allianceType: String!
  allianceSize: Int!
  allianceMaxSize: Int!
  members: [AllianceMember!]
}

interface Person { 
  playerName: String!
  allianceName: String!
  allianceRole: String!
} 

type AllianceMember implements Person {
  playerName: String!
  allianceName: String!
  allianceRole: String!
}

type Player implements Person { 
  playerName: String!
  allianceName: String!
  allianceRole: String!
  roster: [Character!]!
}

type AbilityLevel { 
  color: String!
  level: Int!
  ordinalPosition: Int!
}

type Character { 
  mpqCharacterKey: String! 
  name: String!
  subtitle: String!
  rarity: Int!
  releaseDate: String! # TODO: Make Date Type
  characterBio: String!
  imageUrlSmall: String
  imageUrlMedium: String
  imageUrlLarge: String
  localeLanguage: String!
  abilities: [Ability!]!

  # Optional Roster Instances
  instanceId: ID
  effectiveLevel: Int
  displayLevel: Int
  champion: Boolean
  abilityLevels: [AbilityLevel!]
}

type Ability { 
  abilityKey: String!
  abilitySet: Int
  ordinalPosition: Int!
  color: String! 
  cost: Int
  name: String!
  description: String
}
